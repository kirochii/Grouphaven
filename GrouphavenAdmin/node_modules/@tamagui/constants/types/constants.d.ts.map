{
  "mappings": "AAAA,SAAS,iBAAkC,OAAO;AAElD,OAAO,cAAMA;AACb,OAAO,cAAMC;AACb,OAAO,cAAMC;AACb,OAAO,cAAMC;AAEb,OAAO,cAAMC,kCAAkC;AAI/C,OAAO,cAAMC;AAGb,OAAO,cAAMC;AAGb,OAAO,cAAMC;AAEb,OAAO,cAAMC;AACb,OAAO,cAAMC;AACb,OAAO,cAAMC,iBAAiB,QAAQ,QAAQ,WAAW",
  "names": [
    "isWeb: boolean",
    "isWindowDefined: boolean",
    "isServer: boolean",
    "isClient: boolean",
    "useIsomorphicLayoutEffect: typeof useEffect",
    "isChrome: boolean",
    "isWebTouchable: boolean",
    "isTouchable: boolean",
    "isAndroid: boolean",
    "isIos: boolean",
    "currentPlatform: 'web' | 'ios' | 'native' | 'android'"
  ],
  "sources": [
    "src/constants.ts"
  ],
  "sourcesContent": [
    "import { useEffect, useLayoutEffect } from 'react'\n\nexport const isWeb: boolean = true\nexport const isWindowDefined: boolean = typeof window !== 'undefined'\nexport const isServer: boolean = isWeb && !isWindowDefined\nexport const isClient: boolean = isWeb && isWindowDefined\n\nexport const useIsomorphicLayoutEffect: typeof useEffect = isServer\n  ? useEffect\n  : useLayoutEffect\n\nexport const isChrome: boolean =\n  typeof navigator !== 'undefined' && /Chrome/.test(navigator.userAgent || '')\n\nexport const isWebTouchable: boolean =\n  isClient && ('ontouchstart' in window || navigator.maxTouchPoints > 0)\n\nexport const isTouchable: boolean = !isWeb || isWebTouchable\n// set :boolean to avoid inferring type to false\nexport const isAndroid: boolean = false\nexport const isIos: boolean = process.env.TEST_NATIVE_PLATFORM === 'ios'\nexport const currentPlatform: 'web' | 'ios' | 'native' | 'android' = 'web'\n"
  ],
  "version": 3
}