{
  "mappings": ";;;;AAQA,OAAO,iBAAS,eAAe,WAAW,GAAG,qBAC3CA,UAAU,gBACT",
  "names": [
    "callback: T | undefined"
  ],
  "sources": [
    "src/index.ts"
  ],
  "sourcesContent": [
    "// via radix-ui\n\nimport * as React from 'react'\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  callback: T | undefined\n): T {\n  const callbackRef = React.useRef(callback)\n\n  React.useEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, [])\n}\n"
  ],
  "version": 3
}