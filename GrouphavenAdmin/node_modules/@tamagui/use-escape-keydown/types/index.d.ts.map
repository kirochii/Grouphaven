{
  "mappings": ";;;AAOA,OAAO,iBAAS,iBACdA,uBAAuBC,OAAO,wBAC9BC,gBAAe",
  "names": [
    "onEscapeKeyDownProp?: (event: KeyboardEvent) => void",
    "event: KeyboardEvent",
    "ownerDocument: Document"
  ],
  "sources": [
    "src/index.ts"
  ],
  "sourcesContent": [
    "// via radix-ui\nimport { useCallbackRef } from '@tamagui/use-callback-ref'\nimport React from 'react'\n\n/**\n * Listens for when the escape key is down\n */\nexport function useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n): void {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp)\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event)\n      }\n    }\n\n    ownerDocument.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      ownerDocument.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [onEscapeKeyDown, ownerDocument])\n}\n"
  ],
  "version": 3
}