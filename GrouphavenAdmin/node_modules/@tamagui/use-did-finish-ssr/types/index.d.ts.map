{
  "mappings": "AAEA,OAAO,iBAAS,gBAAgB,aAAaA,QAAQ,IAAI,IAAI;KAiBxD,gBAAgB,SAAS,0BAA0B,IAAI,IAAI;AAEhE,OAAO,iBAAS,eAAe,OAAOC,QAAQ,QAAQ,gBAAgB",
  "names": [
    "value?: A",
    "value?: Value"
  ],
  "sources": [
    "src/index.ts"
  ],
  "sourcesContent": [
    "import * as React from 'react'\n\nexport function useDidFinishSSR<A = boolean>(value?: A): A | false {\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    // @ts-expect-error\n    return value ?? true\n  }\n\n  return React.useSyncExternalStore(\n    subscribe,\n    () => value ?? true,\n    () => {\n      return false as any\n    }\n  )\n}\n\nconst subscribe = () => () => {}\n\ntype FunctionOrValue<Value> = Value extends () => infer X ? X : Value\n\nexport function useClientValue<Value>(value?: Value): FunctionOrValue<Value> | undefined {\n  const done = useDidFinishSSR()\n  // @ts-expect-error this is fine but started to error in ts latest\n  return !done ? undefined : typeof value === 'function' ? value() : value\n}\n"
  ],
  "version": 3
}